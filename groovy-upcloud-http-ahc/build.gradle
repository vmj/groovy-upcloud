apply from: '../gradle/license.gradle'
apply from: '../gradle/groovy.gradle'
apply from: '../gradle/groovydoc.gradle'
apply from: '../gradle/groovydoc-highlightjs.gradle'
apply from: '../gradle/groovydoc-links.gradle'
apply from: '../gradle/jacoco.gradle'
apply from: '../gradle/nexus.gradle'

dependencies {
    // Runtime code is written in Groovy
    compileOnly "org.codehaus.groovy:groovy:$groovyVersion"
    runtime "org.codehaus.groovy:groovy:$groovyVersion"

    // Libraries do not ship with logging API
    compileOnly "org.slf4j:slf4j-api:$slf4jVersion"

    // Dependency injections are marked with standard API
    compileOnly 'javax.inject:javax.inject:1'
    runtime 'javax.inject:javax.inject:1'
    testCompileOnly 'javax.inject:javax.inject:1'

    compile project(':groovy-upcloud-http-spi')

    // API docs
    compileOnly "org.codehaus.groovy:groovy-groovydoc:$groovyVersion"

    // Tests are written in Spock
    testCompile "org.spockframework:spock-core:$spockVersion"

    // Tests need LogbackConfigurator
    testCompile "ch.qos.logback:logback-classic:$logbackVersion"

    testCompile project(':groovy-upcloud-core')

    compile "org.apache.httpcomponents:httpasyncclient:$httpasyncclientVersion", {
        exclude module: 'commons-logging'
    }

    // bridge commons-logging to SLF4J
    runtimeOnly "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    // Spock will use this for mocking the abstract CloseableHttpAsyncClient
    testRuntime "cglib:cglib-nodep:$cglibVersion"
}

groovydoc {
    link("https://hc.apache.org/httpcomponents-asyncclient-dev/httpasyncclient/apidocs/", "org.apache.http.nio.client.",
                                                                                          'org.apache.http.impl.nio.')
    link("https://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/",                "org.apache.http.")
}