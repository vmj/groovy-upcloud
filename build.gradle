buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.5.3'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
    }
}

plugins {
    id 'com.gradle.build-scan' version '1.11'
}

// groovydoc depends on subprojects
evaluationDependsOnChildren()

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

//
// merge coverage reports of subprojects after check
//
apply plugin: 'net.saliman.cobertura'
repositories {
    jcenter() // required to fetch the cobertura dependencies
}
cobertura {
    coverageEncoding = 'UTF-8'
    subprojects.each { sp ->
        if (sp.name != 'manual') {
            if (coverageMergeDatafiles)
                coverageMergeDatafiles += file("${sp.buildDir.path}/cobertura/cobertura.ser")
            else
                coverageMergeDatafiles = [file("${sp.buildDir.path}/cobertura/cobertura.ser")]
        }
    }
}
check.finalizedBy(project.tasks.cobertura)

//
// generate one set of groovydocs for the whole project
//
apply plugin: 'groovy'
apply from: 'gradle/versions.gradle'

dependencies {
    compileOnly "org.codehaus.groovy:groovy:${versions.groovy}:indy"
}

groovydoc {
    subprojects.each { sp ->
        if (sp.name != 'manual') {
            source += sp.groovydoc.source
            classpath += sp.groovydoc.classpath
            groovyClasspath += sp.groovydoc.groovyClasspath
        }
    }
}
apply from: 'gradle/groovydoc-highlightjs.gradle'
apply from: 'gradle/groovydoc-links.gradle'
