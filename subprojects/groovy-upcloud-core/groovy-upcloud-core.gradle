apply from: "${rootDir}/gradle/license.gradle"
apply from: "${rootDir}/gradle/groovy.gradle"
apply from: "${rootDir}/gradle/groovydoc.gradle"
apply from: "${rootDir}/gradle/groovydoc-highlightjs.gradle"
apply from: "${rootDir}/gradle/groovydoc-links.gradle"
apply from: "${rootDir}/gradle/jacoco.gradle"
apply from: "${rootDir}/gradle/nexus.gradle"

groovydoc {
    overviewText = resources.text.fromString """
<p>The central here classes are</p>
<ul>
    <li><a href="fi/linuxbox/upcloud/core/Session.html">Session</a></li>
    <li><a href="fi/linuxbox/upcloud/core/Resource.html">Resource</a></li>
</ul>
"""
}

dependencies {
    // Runtime code is written in Groovy
    compileOnly "org.codehaus.groovy:groovy:$groovyVersion"
    runtime "org.codehaus.groovy:groovy:$groovyVersion"

    // Libraries do not ship with logging API
    compileOnly "org.slf4j:slf4j-api:$slf4jVersion"

    compile project(':groovy-upcloud-http-spi')
    compile project(':groovy-upcloud-json-spi')

    // API docs
    compileOnly "org.codehaus.groovy:groovy-groovydoc:$groovyVersion"

    // Tests are written in Groovy
    //testCompile "org.codehaus.groovy:groovy:$groovyVersion"

    // Tests are written in Spock
    testCompile "org.spockframework:spock-core:$spockVersion"

    // Tests need LogbackConfigurator
    testCompile "ch.qos.logback:logback-classic:$logbackVersion"

    // Spock will use this for mocking the abstract HTTPFacade
    testRuntime "cglib:cglib-nodep:$cglibVersion"

    // for functional testing: JSON to Resource
    testCompile project(':groovy-upcloud-json-gjson')
    testCompile project(':groovy-upcloud-resource')
}
